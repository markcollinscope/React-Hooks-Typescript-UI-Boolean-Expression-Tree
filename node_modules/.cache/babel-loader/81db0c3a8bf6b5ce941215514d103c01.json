{"ast":null,"code":"// Extend the basic behaviour of the application without changing any core source code.\n\n// Very arguably, this module should be split into two - a) EqExp class b) eqExtension related. \n// As they are different concerns...\n// However, left like this for now.\n\nimport { BinExp, DEFAULT_EXP } from './Exp';\nimport { displayBinExp, extendExpFactory } from './ExpView';\n\n// Example: EQ operator True IFF  a EQ b - i.e. same value.\n\nexport const EQ_OP = '==';\nexport class EqExp extends BinExp {\n  constructor() {\n    let lhs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_EXP;\n    let rhs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_EXP;\n    super(EQ_OP, lhs, rhs);\n    this.calc = () => this.getLhsExp().calc() === this.getRhsExp().calc();\n  }\n}\nconst eqExtension = {\n  exp: () => new EqExp(),\n  display: displayBinExp\n};\nexport function eqExtensionFn() {\n  extendExpFactory(EQ_OP, eqExtension);\n}","map":{"version":3,"names":["BinExp","DEFAULT_EXP","displayBinExp","extendExpFactory","EQ_OP","EqExp","constructor","lhs","rhs","calc","getLhsExp","getRhsExp","eqExtension","exp","display","eqExtensionFn"],"sources":["/home/mark/GIT/exp-tree/src/extendExp.ts"],"sourcesContent":["// Extend the basic behaviour of the application without changing any core source code.\r\n\r\n// Very arguably, this module should be split into two - a) EqExp class b) eqExtension related. \r\n// As they are different concerns...\r\n// However, left like this for now.\r\n\r\nimport { Exp, BinExp, DEFAULT_EXP } from './Exp';\r\nimport { displayBinExp, extendExpFactory } from './ExpView';\r\n\r\n// Example: EQ operator True IFF  a EQ b - i.e. same value.\r\n\r\nexport const EQ_OP = '==' as string;\r\nexport class EqExp extends BinExp \r\n{\r\n\tconstructor(lhs: Exp = DEFAULT_EXP, rhs: Exp = DEFAULT_EXP) { super (EQ_OP, lhs, rhs); }\r\n\tcalc = () => this.getLhsExp().calc() === this.getRhsExp().calc();\r\n}\r\n\r\nconst  eqExtension = { exp: () => new EqExp(), display: displayBinExp }\r\n\r\nexport function eqExtensionFn()\r\n{\r\n    extendExpFactory(EQ_OP, eqExtension);\r\n}\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA,SAAcA,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAChD,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,WAAW;;AAE3D;;AAEA,OAAO,MAAMC,KAAK,GAAG,IAAc;AACnC,OAAO,MAAMC,KAAK,SAASL,MAAM,CACjC;EACCM,WAAW,GAAiD;IAAA,IAAhDC,GAAQ,uEAAGN,WAAW;IAAA,IAAEO,GAAQ,uEAAGP,WAAW;IAAI,KAAK,CAAEG,KAAK,EAAEG,GAAG,EAAEC,GAAG,CAAC;IAAC,KACtFC,IAAI,GAAG,MAAM,IAAI,CAACC,SAAS,EAAE,CAACD,IAAI,EAAE,KAAK,IAAI,CAACE,SAAS,EAAE,CAACF,IAAI,EAAE;EADuB;AAExF;AAEA,MAAOG,WAAW,GAAG;EAAEC,GAAG,EAAE,MAAM,IAAIR,KAAK,EAAE;EAAES,OAAO,EAAEZ;AAAc,CAAC;AAEvE,OAAO,SAASa,aAAa,GAC7B;EACIZ,gBAAgB,CAACC,KAAK,EAAEQ,WAAW,CAAC;AACxC"},"metadata":{},"sourceType":"module"}