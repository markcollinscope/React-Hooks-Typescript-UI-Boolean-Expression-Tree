{"ast":null,"code":"var _jsxFileName = \"/home/mark/GIT/exp-tree/src/ExpView.tsx\";\n// React Component: ExpView. \n// visual representation of boolean expressions - done in such a way as to enable \n// the dynamic construction of complex nested expressions (and, or, not ...), \n// to an arbitrary depth, including allowing undefined elements and the use of boolean constants.\n// provides the UI side of Exp.ts - recursively displaying and enabling the modification \n// at any point in the expressions hierarchy.\nimport { ExpNodePartView } from './ExpNodePartView'; // boolean expressions - types(classes) and constants.\n\nimport { NotExp, AndExp, OrExp, NandExp, NorExp, XorExp, XOR_OP, NAND_OP, NOR_OP, UNDEF_EXP, TRUE_EXP, FALSE_EXP, NOT_OP, AND_OP, OR_OP, UNDEF, TRUE, FALSE } from './Exp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst displayNotExp = (e, updateAppCalculations) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lhs-indent\",\n      children: /*#__PURE__*/_jsxDEV(ExpView, {\n        exp: e.getSubExp(),\n        parentUpdateCb: e.setSubExp,\n        requestAppStateBeUpdatedCb: updateAppCalculations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n\nconst displayBinExp = (e, updateAppCalculations) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lhs-indent\",\n      children: /*#__PURE__*/_jsxDEV(ExpView, {\n        exp: e.getLhsExp(),\n        parentUpdateCb: e.setLhsExp,\n        requestAppStateBeUpdatedCb: updateAppCalculations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lhs-indent\",\n      children: /*#__PURE__*/_jsxDEV(ExpView, {\n        exp: e.getRhsExp(),\n        parentUpdateCb: e.setRhsExp,\n        requestAppStateBeUpdatedCb: updateAppCalculations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\nconst displayNoSubExp = (e, updateAppCalculations) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\nconst expFactory = {\n  [UNDEF]: {\n    exp: () => UNDEF_EXP,\n    display: displayNoSubExp\n  },\n  [TRUE]: {\n    exp: () => TRUE_EXP,\n    display: displayNoSubExp\n  },\n  [FALSE]: {\n    exp: () => FALSE_EXP,\n    display: displayNoSubExp\n  },\n  [NOT_OP]: {\n    exp: () => new NotExp(),\n    display: displayNotExp\n  },\n  [AND_OP]: {\n    exp: () => new AndExp(),\n    display: displayBinExp\n  },\n  [OR_OP]: {\n    exp: () => new OrExp(),\n    display: displayBinExp\n  },\n  [NAND_OP]: {\n    exp: () => new NandExp(),\n    display: displayBinExp\n  },\n  [NOR_OP]: {\n    exp: () => new NorExp(),\n    display: displayBinExp\n  },\n  [XOR_OP]: {\n    exp: () => new XorExp(),\n    display: displayBinExp\n  }\n};\n;\nexport function ExpView(props) {\n  const handleSelectionFromDropDownMenu = value => {\n    props.parentUpdateCb(expFactory[value].exp());\n    props.requestAppStateBeUpdatedCb(); // React *cannot* do this automatically!\n  };\n\n  const viewToDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bdr md-font exp-width\",\n      children: /*#__PURE__*/_jsxDEV(ExpNodePartView, {\n        options: Object.keys(expFactory),\n        onSelect: handleSelectionFromDropDownMenu,\n        selected: props.exp.name()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this), expFactory[props.exp.name()].display(props.exp, props.requestAppStateBeUpdatedCb)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 3\n  }, this);\n\n  return viewToDisplay;\n}\n_c = ExpView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpView\");","map":{"version":3,"sources":["/home/mark/GIT/exp-tree/src/ExpView.tsx"],"names":["ExpNodePartView","NotExp","AndExp","OrExp","NandExp","NorExp","XorExp","XOR_OP","NAND_OP","NOR_OP","UNDEF_EXP","TRUE_EXP","FALSE_EXP","NOT_OP","AND_OP","OR_OP","UNDEF","TRUE","FALSE","displayNotExp","e","updateAppCalculations","getSubExp","setSubExp","displayBinExp","getLhsExp","setLhsExp","getRhsExp","setRhsExp","displayNoSubExp","expFactory","exp","display","ExpView","props","handleSelectionFromDropDownMenu","value","parentUpdateCb","requestAppStateBeUpdatedCb","viewToDisplay","Object","keys","name"],"mappings":"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","sourcesContent":["// React Component: ExpView. \n\n// visual representation of boolean expressions - done in such a way as to enable \n// the dynamic construction of complex nested expressions (and, or, not ...), \n// to an arbitrary depth, including allowing undefined elements and the use of boolean constants.\n\n// provides the UI side of Exp.ts - recursively displaying and enabling the modification \n// at any point in the expressions hierarchy.\n\nimport { ExpNodePartView } from './ExpNodePartView';\n\n// boolean expressions - types(classes) and constants.\nimport { \n\tExp, BinExp, NotExp, AndExp, OrExp, NandExp, NorExp, XorExp, XOR_OP, NAND_OP, NOR_OP, UNDEF_EXP, TRUE_EXP, \n\tFALSE_EXP, NOT_OP, AND_OP, OR_OP, UNDEF, TRUE, FALSE\n} from './Exp';\n\nconst displayNotExp = (e: NotExp, updateAppCalculations: () => void): JSX.Element => {\n\treturn (\n\t\t<div>\n\t\t\t<div />\n\t\t\t<div className='lhs-indent'>\n\t\t\t\t<ExpView\n\t\t\t\t\texp={e.getSubExp()}\n\t\t\t\t\tparentUpdateCb={e.setSubExp}\n\t\t\t\t\trequestAppStateBeUpdatedCb={updateAppCalculations}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst displayBinExp = (e: BinExp, updateAppCalculations: () => void): JSX.Element => {\n\treturn (\n\t\t<div>\n\t\t\t<div className='lhs-indent'>\n\t\t\t\t<ExpView\n\t\t\t\t\texp={e.getLhsExp()}\n\t\t\t\t\tparentUpdateCb={e.setLhsExp}\n\t\t\t\t\trequestAppStateBeUpdatedCb={updateAppCalculations}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div />\n\t\t\t<div className='lhs-indent'>\n\t\t\t\t<ExpView\n\t\t\t\t\texp={e.getRhsExp()}\n\t\t\t\t\tparentUpdateCb={e.setRhsExp}\n\t\t\t\t\trequestAppStateBeUpdatedCb={updateAppCalculations}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst displayNoSubExp = (e: Exp, updateAppCalculations: () => void): JSX.Element => {\n\treturn <p></p>;\n}\n\ntype ExpNameSpecificBehaviour = { exp: () => Exp, display: (e: Exp, appCalc: () => void) => JSX.Element };\ntype ExpNameToBehaviourMap = { [index: string]: ExpNameSpecificBehaviour };\n\nconst expFactory = {\n\t[UNDEF]: \t\t{ exp: () => UNDEF_EXP, \tdisplay: displayNoSubExp },\n\t[TRUE]: \t\t{ exp: () => TRUE_EXP, \t\tdisplay: displayNoSubExp },\n\t[FALSE]: \t\t{ exp: () => FALSE_EXP, \tdisplay: displayNoSubExp },\n\t[NOT_OP]: \t\t{ exp: () => new NotExp(), \tdisplay: displayNotExp },\n\t[AND_OP]: \t\t{ exp: () => new AndExp(), \tdisplay: displayBinExp },\n\t[OR_OP]: \t\t{ exp: () => new OrExp(), \tdisplay: displayBinExp },\n\t[NAND_OP]: \t\t{ exp: () => new NandExp(), display: displayBinExp },\n\t[NOR_OP]: \t\t{ exp: () => new NorExp(), \tdisplay: displayBinExp },\n\t[XOR_OP]: \t\t{ exp: () => new XorExp(), \tdisplay: displayBinExp }\n} as ExpNameToBehaviourMap;\n\ninterface Props {\n\t// as shown in 'this' instance of ExpView.\n\texp: \t\t\t\t\t\tExp;\n\tparentUpdateCb: \t\t\t(e: Exp) => Exp;\n\trequestAppStateBeUpdatedCb: () => void;\n};\n\nexport function ExpView(props: Props)\n{\n\tconst handleSelectionFromDropDownMenu = (value: string) => {\n\t\tprops.parentUpdateCb(expFactory[value].exp());\n\t\tprops.requestAppStateBeUpdatedCb(); // React *cannot* do this automatically!\n\t}\n\n\tconst viewToDisplay = \n\t\t<div>\n\t\t\t<div className='bdr md-font exp-width'>\n\t\t\t\t<ExpNodePartView \n\t\t\t\t\toptions=\t{ Object.keys(expFactory) }\n\t\t\t\t\tonSelect=\t{ handleSelectionFromDropDownMenu }\n\t\t\t\t\tselected=\t{ props.exp.name() }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div/>\n\t\t\t{expFactory[props.exp.name()].display(props.exp, props.requestAppStateBeUpdatedCb)}\n\t\t</div>\n\t\t\n\treturn viewToDisplay;\n}\n"]},"metadata":{},"sourceType":"module"}