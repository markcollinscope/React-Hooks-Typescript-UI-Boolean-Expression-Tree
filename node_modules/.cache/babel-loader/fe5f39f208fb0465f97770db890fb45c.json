{"ast":null,"code":"import _slicedToArray from\"/home/mark/GIT/exp-tree/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _createClass from\"/home/mark/GIT/exp-tree/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/home/mark/GIT/exp-tree/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _inherits from\"/home/mark/GIT/exp-tree/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/mark/GIT/exp-tree/node_modules/@babel/runtime/helpers/esm/createSuper.js\";// import { lg } from './utils';\n// UI (Interface).\nimport{useState}from'react';import{ExpView}from'./ExpView';import{eqExtensionFn}from'./extendExp';// Domain.\nimport{UNDEF_EXP,NotExp,uBoolToName}from'./Exp';/* \tdummyRoot(Exp) is the parent of the actual Exp to be shown.\n    \n    (App)         (has dropdown)\n    dummyRoot ---> visibleRoot-------------------------> xxxExp ... etc.\n                       |-------------------------------> xxxExp ... etc.     \n\t\n\tdummyRoot enables the visibleRoot to be changed dynamically - something has to 'hold it' in reference form\n\tfor this to happen. Selecting a new option (from the dropdown menu of visibleRoot) changes the visibleRoot\n\tby updating the reference held in dummyRoot (or another Exp node if deeper in an expression hierarchy).\n\n\tthere are other possible approaches... this is a bit of a classic comp-sci solution.\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DummyRoot=/*#__PURE__*/function(_NotExp){_inherits(DummyRoot,_NotExp);var _super=_createSuper(DummyRoot);function DummyRoot(){_classCallCheck(this,DummyRoot);return _super.apply(this,arguments);}return _createClass(DummyRoot);}(NotExp);eqExtensionFn();// extend functionality.\nfunction App(){var visibleRoot=function visibleRoot(){return dummyRoot.getSubExp();};var calcRes=function calcRes(e){return uBoolToName(e.calc());};// all state.\nvar _useState=useState(new DummyRoot(UNDEF_EXP)),_useState2=_slicedToArray(_useState,1),dummyRoot=_useState2[0];var _useState3=useState(calcRes(visibleRoot())),_useState4=_slicedToArray(_useState3,2),res=_useState4[0],setRes=_useState4[1];var _useState5=useState(visibleRoot().expand()),_useState6=_slicedToArray(_useState5,2),textExp=_useState6[0],setTextExp=_useState6[1];console.log(\"App Fn Render, res: \".concat(res,\", text: \").concat(textExp));var updateVisibleRoot=function updateVisibleRoot(newExp){console.log(\"App Fn updateVisibleRoot Exp.name: \".concat(newExp.name()));dummyRoot.setSubExp(newExp);updateCalcResultsArea();return newExp;};var updateCalcResultsArea=function updateCalcResultsArea(){setRes(calcRes(visibleRoot()));setTextExp(visibleRoot().expand());};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"header\",{className:\"red tal bm lg-font\",children:[\"De-luxe Boolean Expression Calculator\",/*#__PURE__*/_jsx(\"p\",{className:\"md-font\",children:\"for all your boolean evaluation needs\"})]}),/*#__PURE__*/_jsxs(\"section\",{id:\"resultsArea\",className:\"orange bm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tal lg-font flex-horiz\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"exp-width\",children:\"Expression:\"}),/*#__PURE__*/_jsx(\"p\",{children:textExp})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tal lg-font flex-horiz bm\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"exp-width\",children:\"Result:\"}),/*#__PURE__*/_jsx(\"p\",{children:res})]})]}),/*#__PURE__*/_jsx(\"section\",{id:\"expressionArea\",children:/*#__PURE__*/_jsx(ExpView,{exp:visibleRoot(),parentUpdateCb:updateVisibleRoot,requestAppStateBeUpdatedCb:updateCalcResultsArea})})]});}export default App;","map":{"version":3,"names":["useState","ExpView","eqExtensionFn","UNDEF_EXP","NotExp","uBoolToName","DummyRoot","App","visibleRoot","dummyRoot","getSubExp","calcRes","e","calc","res","setRes","expand","textExp","setTextExp","console","log","updateVisibleRoot","newExp","name","setSubExp","updateCalcResultsArea"],"sources":["/home/mark/GIT/exp-tree/src/App.tsx"],"sourcesContent":["// import { lg } from './utils';\n\n// UI (Interface).\nimport { useState } from 'react';\nimport { ExpView } from './ExpView';\nimport { eqExtensionFn } from './extendExp';\n\n// Domain.\nimport { UNDEF_EXP, Exp, NotExp, uBoolToName } from './Exp'\n\n/* \tdummyRoot(Exp) is the parent of the actual Exp to be shown.\n    \n    (App)         (has dropdown)\n    dummyRoot ---> visibleRoot-------------------------> xxxExp ... etc.\n                       |-------------------------------> xxxExp ... etc.     \n\t\n\tdummyRoot enables the visibleRoot to be changed dynamically - something has to 'hold it' in reference form\n\tfor this to happen. Selecting a new option (from the dropdown menu of visibleRoot) changes the visibleRoot\n\tby updating the reference held in dummyRoot (or another Exp node if deeper in an expression hierarchy).\n\n\tthere are other possible approaches... this is a bit of a classic comp-sci solution.\n*/\n\nclass DummyRoot extends NotExp {}\n\neqExtensionFn();\t// extend functionality.\n\nfunction App()\n{\n\tconst visibleRoot = () => dummyRoot.getSubExp();\n\tconst calcRes = (e: Exp) => uBoolToName(e.calc());\n\n\t// all state.\n\tconst [dummyRoot,] \t\t\t\t= useState(new DummyRoot(UNDEF_EXP)); \n\tconst [res, setRes] \t\t\t= useState(calcRes(visibleRoot()));\n\tconst [textExp, setTextExp] \t= useState(visibleRoot().expand());\n\n\tconsole.log(`App Fn Render, res: ${res}, text: ${textExp}`)\n\n\tconst updateVisibleRoot = (newExp: Exp) =>\n\t{\n\t\tconsole.log(`App Fn updateVisibleRoot Exp.name: ${newExp.name()}`)\n\t\tdummyRoot.setSubExp(newExp);\n\t\tupdateCalcResultsArea();\n\t\treturn newExp;\n\t}\n\n\tconst updateCalcResultsArea = () => {\n\t\tsetRes(calcRes(visibleRoot()));\n\t\tsetTextExp(visibleRoot().expand());\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<header className=\"red tal bm lg-font\">\n\t\t\t\tDe-luxe Boolean Expression Calculator\n\t\t\t\t<p className='md-font'>for all your boolean evaluation needs</p>\n\t\t\t</header>\n\n\t\t\t<section id='resultsArea' className='orange bm'>\n\t\t\t\t<div className='tal lg-font flex-horiz'>\n\t\t\t\t\t<p className='exp-width'>Expression:</p> \n\t\t\t\t\t<p>{textExp}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='tal lg-font flex-horiz bm'>\n\t\t\t\t\t<p className='exp-width'>Result:</p> \n\t\t\t\t\t<p>{res}</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t\t<section id='expressionArea'>\n\t\t\t\t<ExpView\n\t\t\t\t\texp={visibleRoot()}\n\t\t\t\t\tparentUpdateCb={updateVisibleRoot}\n\t\t\t\t\trequestAppStateBeUpdatedCb={updateCalcResultsArea}\n\t\t\t\t/>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\nexport default App;\n"],"mappings":"ihBAAA;AAEA;AACA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,OAAO,KAAQ,WAAW,CACnC,OAASC,aAAa,KAAQ,aAAa,CAE3C;AACA,OAASC,SAAS,CAAOC,MAAM,CAAEC,WAAW,KAAQ,OAAO,CAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAXA,2FAaMC,UAAS,2NAASF,MAAM,EAE9BF,aAAa,EAAE,CAAE;AAEjB,QAASK,IAAG,EACZ,CACC,GAAMC,YAAW,CAAG,QAAdA,YAAW,SAASC,UAAS,CAACC,SAAS,EAAE,GAC/C,GAAMC,QAAO,CAAG,QAAVA,QAAO,CAAIC,CAAM,QAAKP,YAAW,CAACO,CAAC,CAACC,IAAI,EAAE,CAAC,GAEjD;AACA,cAAyBb,QAAQ,CAAC,GAAIM,UAAS,CAACH,SAAS,CAAC,CAAC,wCAApDM,SAAS,eAChB,eAAyBT,QAAQ,CAACW,OAAO,CAACH,WAAW,EAAE,CAAC,CAAC,yCAAlDM,GAAG,eAAEC,MAAM,eAClB,eAA+Bf,QAAQ,CAACQ,WAAW,EAAE,CAACQ,MAAM,EAAE,CAAC,yCAAxDC,OAAO,eAAEC,UAAU,eAE1BC,OAAO,CAACC,GAAG,+BAAwBN,GAAG,oBAAWG,OAAO,EAAG,CAE3D,GAAMI,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIC,MAAW,CACtC,CACCH,OAAO,CAACC,GAAG,8CAAuCE,MAAM,CAACC,IAAI,EAAE,EAAG,CAClEd,SAAS,CAACe,SAAS,CAACF,MAAM,CAAC,CAC3BG,qBAAqB,EAAE,CACvB,MAAOH,OAAM,CACd,CAAC,CAED,GAAMG,sBAAqB,CAAG,QAAxBA,sBAAqB,EAAS,CACnCV,MAAM,CAACJ,OAAO,CAACH,WAAW,EAAE,CAAC,CAAC,CAC9BU,UAAU,CAACV,WAAW,EAAE,CAACQ,MAAM,EAAE,CAAC,CACnC,CAAC,CAED,mBACC,oCACC,gBAAQ,SAAS,CAAC,oBAAoB,gEAErC,UAAG,SAAS,CAAC,SAAS,mDAA0C,GACxD,cAET,iBAAS,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,wBAC9C,aAAK,SAAS,CAAC,wBAAwB,wBACtC,UAAG,SAAS,CAAC,WAAW,yBAAgB,cACxC,mBAAIC,OAAO,EAAK,GACX,cACN,aAAK,SAAS,CAAC,2BAA2B,wBACzC,UAAG,SAAS,CAAC,WAAW,qBAAY,cACpC,mBAAIH,GAAG,EAAK,GACP,GACG,cAEV,gBAAS,EAAE,CAAC,gBAAgB,uBAC3B,KAAC,OAAO,EACP,GAAG,CAAEN,WAAW,EAAG,CACnB,cAAc,CAAEa,iBAAkB,CAClC,0BAA0B,CAAEI,qBAAsB,EACjD,EACO,GACL,CAER,CACA,cAAelB,IAAG"},"metadata":{},"sourceType":"module"}